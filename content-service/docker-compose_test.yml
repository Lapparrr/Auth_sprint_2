version: '3'
services:
  postgres:
    image: postgres:13
    build:
      dockerfile: Dockerfile.db
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment: 
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
  migration:
    build:
       context: migration
       dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
  elastic:
    image: elasticsearch:8.6.2
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 50
  etl:
    build:
      context: ./etl
    env_file:
      - .env
    depends_on:
      - postgres
      - elastic
    restart: always
  redis:
    image: redis:6.0.9
    ports:
      - 6379:6379

  api:
    build: 
      context: app
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      PROJECT_NAME: ${PROJECT_NAME}
      ES_HOST : ${ES_HOST}
      ES_PORT: ${ES_PORT}
    env_file:
      - .env
    depends_on:
      - elastic
      - redis
    restart: always

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 8000:80
    depends_on:
      - api
volumes:
  postgres_volume:
  static_volume:
  media_volume: